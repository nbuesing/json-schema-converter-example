---
version: '3.7'

networks:
  default:
    name: poc_network
    driver: bridge

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper
    container_name: poc_zookeeper
    ports:
      - '2181:2181'
    volumes:
      - ./jmx_prometheus:/opt/jmx_prometheus
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/zookeeper-config.yml

  broker-1:
    image: confluentinc/cp-kafka:5.5.0
    hostname: broker-1
    container_name: poc_broker-1
    depends_on:
      - zookeeper
    ports:
      - '19092:19092'
    volumes:
      - ./jmx_prometheus:/opt/jmx_prometheus
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_SECURITY_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_METRIC_REPORTERS:
      KAFKA_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml -javaagent:/opt/jmx_prometheus/jolokia-agent.jar=port=7072,host=*

  broker-2:
    image: confluentinc/cp-kafka:5.5.0
    hostname: broker-2
    container_name: poc_broker-2
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    volumes:
      - ./jmx_prometheus:/opt/jmx_prometheus
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_SECURITY_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_METRIC_REPORTERS: 
      KAFKA_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml -javaagent:/opt/jmx_prometheus/jolokia-agent.jar=port=7072,host=*

  broker-3:
    image: confluentinc/cp-kafka:5.5.0
    hostname: broker-3
    container_name: poc_broker-3
    depends_on:
      - zookeeper
    ports:
      - '39092:39092'
    volumes:
      - ./jmx_prometheus:/opt/jmx_prometheus
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_SECURITY_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_METRIC_REPORTERS: 
      KAFKA_OPTS: -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml -javaagent:/opt/jmx_prometheus/jolokia-agent.jar=port=7072,host=*

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.0
    hostname: schema-registry
    container_name: poc_schema-registry
    depends_on:
      - zookeeper
      - broker-1
      - broker-2
      - broker-3
    ports:
      - '8081:8081'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_DEBUG: 'true'

  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.5.0
    hostname: rest-proxy
    container_name: poc_rest-proxy
    depends_on:
      - zookeeper
      - broker-1
    ports:
      - '8082:8082'
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker-1:9092'
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

  connect-1:
    image: confluentinc/cp-kafka-connect:5.5.0
    hostname: connect-1
    container_name: poc_connect-1
    depends_on:
      - zookeeper
      - broker-1
      - broker-2
      - broker-3
      - schema-registry
    ports:
      - "18083:8083"
    volumes:
      - ./connect-jars:/opt/kafka-connect-lib
      - ./mysql-connector-java-5.1.48.jar:/usr/share/java/kafka-connect-jdbc/mysql-connector-java-5.1.48.jar
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker-1:9092,broker-2:9092,broker-3:9092'
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'connect-cluster'
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-cluster-sink-config'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-cluster-sink-offsets'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-cluster-sink-status'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'connect-1'
      CONNECT_PLUGIN_PATH: /opt/kafka-connect-lib,/usr/share/java
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
  
  connect-2:
    image: confluentinc/cp-kafka-connect:5.5.0
    hostname: connect-2
    container_name: poc_connect-2
    depends_on:
      - zookeeper
      - broker-1
      - broker-2
      - broker-3
      - schema-registry
    ports:
      - "28083:8083"
    volumes:
      - ./connect-jars:/opt/kafka-connect-lib
      - ./mysql-connector-java-5.1.48.jar:/usr/share/java/kafka-connect-jdbc/mysql-connector-java-5.1.48.jar
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker-1:9092,broker-2:9092,broker-3:9092'
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'connect-cluster'
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-cluster-sink-config'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-cluster-sink-offsets'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-cluster-sink-status'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'connect-2'
      CONNECT_PLUGIN_PATH: /opt/kafka-connect-lib,/usr/share/java
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO

  mysql:
    image: mysql:5.7
    hostname: mysql
    container_name: poc_mysql
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./mysql/csv:/csv
    environment:
      MYSQL_ROOT_PASSWORD: debezium 
      MYSQL_USER: mysqluser
      MYSQL_PASSWORD: mysqlpw

